---
import type { CollectionEntry } from "astro:content";
import FormattedDate from "../components/FormattedDate.astro";

import BasePage from "./BasePage.astro";

type Props = CollectionEntry<"blog">["data"] & {
  imageWidth?: number | undefined;
  imageHeight?: number | undefined;
};

const {
  title,
  description,
  pubDate,
  updatedDate,
  heroImage,
  imageWidth,
  imageHeight,
} = Astro.props;
---

<BasePage
  title={title}
  description={description}
  image={heroImage || "/blog-placeholder-2.jpg"}
>
  <style slot="head">
    main {
      width: calc(100% - 2em);
      max-width: 100%;
      margin: 0;
    }
    .hero-image {
      width: 100%;
    }
    .hero-image img {
      display: block;
      margin: 0 auto;
      border-radius: 12px;
      box-shadow: var(--box-shadow);
      max-height: 50vh;
      width: auto;
    }
    .prose {
      width: 720px;
      max-width: calc(100% - 2em);
      margin: auto;
      padding: 1em;
      color: rgb(var(--gray-dark));
    }
    .title {
      margin-bottom: 1em;
      padding: 1em 0;
      text-align: center;
      line-height: 1;
    }
    .title h1 {
      margin: 0 0 0.5em 0;
    }
    .date {
      margin-bottom: 0.5em;
      color: rgb(var(--gray));
    }
    .last-updated-on {
      font-style: italic;
    }
  </style>
  <article>
    {
      heroImage && (
        <div class="hero-image">
          <img
            width={imageWidth || 1020}
            height={imageHeight || 510}
            src={heroImage}
            alt=""
          />
        </div>
      )
    }
    <div class="prose">
      <div class="title">
        <div class="date">
          <FormattedDate date={pubDate} />
          {
            updatedDate && (
              <div class="last-updated-on">
                Last updated on <FormattedDate date={updatedDate} />
              </div>
            )
          }
        </div>
        <h1>{title}</h1>
        <hr />
      </div>
      <slot />
    </div>
  </article>
</BasePage>
